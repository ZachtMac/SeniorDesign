@model GearNet.Entities.Case

@{
    ViewData["Title"] = "Details";
}

<h1>Case Details</h1>

<div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CaseName)
        </dt>
        <dd data-testid="detailCasename" class="col-sm-10">
            @Html.DisplayFor(model => model.CaseName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DateTime)
        </dt>
        <dd data-testid="detailStartDate" class="col-sm-10">
            @Html.DisplayFor(model => model.DateTime)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Duration)
        </dt>
        <dd data-testid="detailDuration" class="col-sm-10">
            @Html.DisplayFor(model => model.Duration)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Username)
        </dt>
        <dd data-testid="detailUsername" class="col-sm-10">
            @Html.DisplayFor(model => model.Username)
        </dd>
    </dl>
</div>
<div style="margin-bottom: 2.5%;">
    <!-- Add margin to bottom -->
    <a data-testid="editCase" asp-action="Edit" asp-route-id="@Model?.CaseId" class="btn btn-primary">Edit</a>
    <a data-testid="backList" asp-action="Index" class="btn btn-secondary">Back to List</a>
</div>

<div>
    <div style="display: flex; justify-content: space-between">
        <h4 class="float-left">Booked Devices</h4>
        <a data-testid="editDevice" asp-controller="Devices" asp-action="DeviceBooking" asp-route-id="@Model.CaseId" class="btn btn-success float-right">Book Devices</a>
    </div>

    <hr />
    <div style="height: 360px; overflow-y: auto; margin-bottom: 0rem">
        <table class="table" style="table-layout: fixed;">
            <thead>
                <tr>
                    <th>Device ID</th>
                    <th>Device Name</th>
                    <th>Device Type</th>
                    <th>Operating System</th>
                    <th>Software Version</th>
                    <th>Vendor</th>
                    <th>Rack Row</th>
                    <th>Rack Column</th>
                    <th></th>
                </tr>
            </thead>
            <tbody id="deviceTableBody">
                @if (Model.Devices.Count == 0)
                {
                    <tr>
                        <td colspan="8">
                            No Devices Booked
                        </td>
                    </tr>
                }
                else
                {
                    @foreach (var device in Model.Devices)
                    {
                        <tr class="deviceRow">
                            <td>@device.DeviceId</td>
                            <td>@device.DeviceName</td>
                            <td>@device.DeviceType</td>
                            <td>@device.OperatingSystem</td>
                            <td>@device.SoftwareVersion</td>
                            <td>@device.Vendor</td>
                            <td>@device.RackRow</td>
                            <td>@device.RackCol</td>
                            <td>
                                <form asp-controller="Cases" asp-action="RemoveFromBookedDevices" method="post">
                                    <input type="hidden" name="deviceId" value="@device.DeviceId" />
                                    <input type="hidden" name="caseId" value="@Model.CaseId" />
                                    <button type="submit" class="btn btn-danger">Remove</button>
                                </form>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
    <nav aria-label="Page navigation example">
        <ul id="pagination" class="pagination">
            <!-- Pagination links will be dynamically generated here -->
        </ul>
    </nav>
</div>

@section scripts {
    <script>
        // Initialize pagination
        $(document).ready(function () {
            var rows = $('.deviceRow');
            var pageSize = 5;
            var pageCount = Math.ceil(rows.length / pageSize);

            var paginationContainer = $('#pagination');

            // Pagination links
            for (var i = 1; i <= pageCount; i++) {
                var li = $('<li></li>').addClass('page-item').attr('data-page', i);
                var link = $('<a></a>').addClass('page-link').attr('href', '#').text(i);

                li.append(link);
                paginationContainer.append(li);
            }

            // Add active class to the first page link
            paginationContainer.find('.page-item:first-child').addClass('active');

            // Function to handle pagination
            paginationContainer.on('click', '.page-item', function () {
                var pageNumber = parseInt($(this).attr('data-page'));
                var start = pageSize * (pageNumber - 1);
                var end = start + pageSize;

                rows.hide().slice(start, end).show();

                // Remove active class from all pagination links
                paginationContainer.find('.page-item').removeClass('active');
                // Add active class to the selected pagination link
                $(this).addClass('active');
            });

            // Show only the first page initially
            paginationContainer.find('.page-item:first-child').click();
        });
    </script>
}