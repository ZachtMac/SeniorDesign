@model IEnumerable<GearNet.Entities.Case>

@{
    ViewData["Title"] = "Index";
}


<!DOCTYPE html>
<html>
<head>
    <style>
        body {
            background-image: url('assets/splashbackdrop.png');
            background-size: 100% 100%;
            background-repeat: no-repeat;
            background-attachment: fixed;
            background-color: rgba(255, 255, 255, 1); /* Adjust the alpha (0.5) for the desired opacity */
        }

        div {
            padding: 5px;
        }

        .tableForm {
            background-color: rgba(255, 255, 255, .75); /* Adjust the alpha (0.5) for the desired opacity */
        }

        .dropbtn {
            background-color: #3498DB;
            color: white;
            padding: 16px;
            font-size: 16px;
            border: none;
            cursor: pointer;
        }

            .dropbtn:hover, .dropbtn:focus {
                background-color: #2980B9;
            }

        .dropdown {
            position: relative;
            display: inline-block;
        }

        .dropdown-content {
            display: none;
            position: absolute;
            background-color: #f1f1f1;
            min-width: 160px;
            overflow: auto;
            box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
            z-index: 1;
        }

            .dropdown-content a {
                color: black;
                padding: 12px 16px;
                text-decoration: none;
                display: block;
            }

        .dropdown a:hover {
            background-color: #ddd;
        }

        /* Add this CSS to your existing styles */
        #arrowIcon {
            display: inline-block;
            width: 0;
            height: 0;
            border-left: 5px solid transparent;
            border-right: 5px solid transparent;
            border-top: 5px solid #fff; /* Set the color of the arrow to match your button's background */
            margin-left: 5px; /* Adjust the margin to position the arrow correctly */
            transition: transform 0.3s; /* Add a smooth transition for the arrow icon */
        }

        .dropbtn.active #arrowIcon {
            transform: rotate(180deg); /* Rotate the arrow 180 degrees when active */
        }

        .show {
            display: block;
        }
        /* The switch - the box around the slider */
        .switch {
            position: relative;
            display: inline-block;
            width: 60px;
            height: 34px;
        }

            /* Hide default HTML checkbox */
            .switch input {
                opacity: 0;
                width: 0;
                height: 0;
            }

        /* The slider */
        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #ccc;
            transition: 0.4s;
        }

            .slider:before {
                position: absolute;
                content: "";
                height: 26px;
                width: 26px;
                left: 4px;
                bottom: 4px;
                background-color: white;
                transition: 0.4s;
            }

        input:checked + .slider {
            background-color: #2196F3;
        }

        input:focus + .slider {
            box-shadow: 0 0 1px #2196F3;
        }

        input:checked + .slider:before {
            transform: translateX(26px);
        }

        table {
            background-color: rgba(255, 255, 255, 0); /* Adjust the alpha (0.5) for the desired opacity */
        }

        /* Rounded sliders */
        .slider.round {
            border-radius: 34px;
        }

            .slider.round:before {
                border-radius: 50%;
            }
    </style>
</head>
<body>
    <div class="tableForm">
        <form method="get" asp-action="Index">
            <div class="row" style="width: 100%; flex-wrap: nowrap">
                <div class="col-7" style="margin-right: 5px;">
                    <div class="form-group">
                        <h1>Cases</h1>
                    </div>
                </div>
                <div class="col-5" style="display: flex; justify-content: flex-end;">
                    <div class="dropdown" style="margin-left: auto;">
                        <div style="display: flex">
                            <a asp-action="Create" class="btn btn-success">Create New</a>
                            <button id="dropdownButton" class="dropbtn" style="border-radius: 0.25rem; padding: 7.5px">
                                Search <span id="arrowIcon"></span>
                            </button>
                        </div>
                        <div id="myDropdown" class="dropdown-content" style="padding: 10px; width: 250px">
                            @if (ViewData.ContainsKey("caseName"))
                            {
                                <div style="margin-bottom: 10px;">
                                    Case Name: <input type="text" name="caseName" class="form-control" placeholder="Case Name..." value="@ViewData["caseName"]" />
                                </div>
                            } else
                            {
                                <div style="margin-bottom: 10px;">
                                    Case Name: <input type="text" name="caseName" class="form-control" placeholder="Case Name..." />
                                </div>
                            }
                            <div style="margin-bottom: 10px;">
                                Start:
                                @if (ViewData.ContainsKey("startDate"))
                                {
                                    <input type="date" name="startDate" class="form-control" placeholder="" value="@ViewData["startDate"]" />
                                } else
                                {
                                    <input type="date" name="startDate" class="form-control" placeholder="" />
                                }
                                End: 
                                @if (ViewData.ContainsKey("endDate"))
                                {
                                    <input type="date" name="endDate" class="form-control" placeholder="" value="@ViewData["endDate"]" />
                                } else
                                {
                                    <input type="date" name="endDate" class="form-control" placeholder="" />
                                }
                            </div>

                            
                            @if (ViewData.ContainsKey("duration"))
                            {
                                <div style="margin-bottom: 10px;">
                                    Duration: <input type="number" name="duration" class="form-control" placeholder="Duration..." value="@ViewData["duration"]" />
                                </div>
                            } else
                            {
                                <div style="margin-bottom: 10px;">
                                    Duration: <input type="number" name="duration" class="form-control" placeholder="Duration..." />
                                </div>
                            }
                            @if (ViewData.ContainsKey("studentUser"))
                            {
                                <div style="margin-bottom: 10px;">
                                    Student Username: <input type="text" name="studentUser" class="form-control" placeholder="Student Username..." value="@ViewData["studentUser"]" />
                                </div>
                            } else
                            {
                                <div style="margin-bottom: 10px;">
                                    Student Username: <input type="text" name="studentUser" class="form-control" placeholder="Student Username..." />
                                </div>
                            }
                            <button type="submit" class="btn btn-primary btn-block" style="margin-top: 10px;">Search</button>
                            <button type="submit" class="btn btn-secondary btn-block" onclick="clearSearch()" style="margin-top: 10px;">Reset</button>

                        </div>
                    </div>
                </div>
            </div>
        </form>
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.CaseName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.DateTime)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Duration)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Username)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.CaseName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DateTime)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Duration)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Username)
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.CaseId"
                               class="btn btn-primary">Edit</a>
                            <a asp-action="Details" asp-route-id="@item.CaseId"
                               class="btn btn-secondary">Details</a>
                            <a asp-action="Delete" asp-route-id="@item.CaseId"
                               class="btn btn-danger">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <script>
        var searchValues = {};
        document.getElementById("dropdownButton").addEventListener("click", function (event) {
            event.preventDefault();
            toggleDropdown();
        });



        document.addEventListener("DOMContentLoaded", function () {
            const isCheckedOutSwitch = document.getElementById("IsCheckedOutSwitch");
            const isCheckedOutHidden = document.querySelector('input[name="isCheckedOut"]');
            const toggleText = document.getElementById("toggleText");

            isCheckedOutSwitch.addEventListener("change", function () {
                if (isCheckedOutSwitch.checked) {
                    isCheckedOutHidden.value = "True";
                    toggleText.textContent = "True";
                } else {
                    isCheckedOutHidden.value = "False";
                    toggleText.textContent = "False";
                    console.log(isCheckedOutHidden.value)
                }
            });

            isCheckedOutHidden.value = isCheckedOutSwitch.checked ? "True" : "False";
        });

        function toggleDropdown() {
            var dropdown = document.getElementById("myDropdown");
            var button = document.getElementById("dropdownButton");

            if (dropdown.classList.contains("show")) {
                dropdown.classList.remove("show");
                button.classList.remove("active");
            } else {
                dropdown.classList.add("show");
                button.classList.add("active");
            }
        }

        function clearSearch() {
            document.querySelector('input[name="caseName"]').value = "";
            document.querySelector('input[name="startDate"]').value = "";
            document.querySelector('input[name="endDate"]').value = "";
            document.querySelector('input[name="duration"]').value = "";
            document.querySelector('input[name="studentUser"]').value = "";
        }
    </script>
</body>
</html>
